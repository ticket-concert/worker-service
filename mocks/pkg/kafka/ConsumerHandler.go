// Code generated by mockery v2.39.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	kafka "gopkg.in/confluentinc/confluent-kafka-go.v1/kafka"
)

// ConsumerHandler is an autogenerated mock type for the ConsumerHandler type
type ConsumerHandler struct {
	mock.Mock
}

// SendEmailOtpLogin provides a mock function with given fields: message, topic
func (_m *ConsumerHandler) SendEmailOtpLogin(message *kafka.Message, topic string) {
	_m.Called(message, topic)
}

// SendEmailOtpRegister provides a mock function with given fields: message, topic
func (_m *ConsumerHandler) SendEmailOtpRegister(message *kafka.Message, topic string) {
	_m.Called(message, topic)
}

// NewConsumerHandler creates a new instance of ConsumerHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConsumerHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *ConsumerHandler {
	mock := &ConsumerHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
